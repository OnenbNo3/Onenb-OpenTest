using System;
using System.Windows.Forms;

namespace KWSTEST
{
    public enum Operators
    {
        Plus,
        Minus,
        Equal,
        Multiplication,
        Division,

        Non
    }

    public enum ClickChcek
    {
        Num_Key,
        Plus_Key,
        Minus_Key,
        Equal_Key,
        Multipli_key,
        division_key,
        Dot_key,
        Non

    }

    public partial class Form1 : Form
    {
        public decimal Result = 0;
        public bool IsNewNum = true;
        public ClickChcek LastClick = ClickChcek.Non;
        public Operators opt = Operators.Non;

        public bool DotCheck = false;

        public bool CalFlag = true;
        public decimal CalSave1 = 0;
        public decimal CalSave2 = 0;
        public string Cal = string.Empty;

        //History Box저장용
        public decimal SaveData = 0;
        public decimal SaveData2 = 0;

        decimal MaxNum = decimal.MaxValue;
        decimal MinNum = decimal.MinValue;

        public Form1()
        {
            InitializeComponent();

            //첨에 0으로 초기화 하면서 시작
            txtResultBox.Text = "0";
        }


        private void btnClear_Click(object sender, EventArgs e)
        {
            //계산기 초기화 기능
            //결과값/ 결과값UI/ 히스토리 UI 초기화필요
            Result = 0;
            //IsNewNum = true;
            txtResultBox.Clear();
            txtHistoryBox.Clear();

            SaveData = 0;
            SaveData2 = 0;

            LastClick = ClickChcek.Non;
            opt = Operators.Non;

        }

        private void btnBackClear_Click(object sender, EventArgs e)
        {
            string Result = txtResultBox.Text;

            if (txtResultBox.Text != "" && txtResultBox.Text != null)
            {
                if (Result.Length == 0)
                {
                    txtResultBox.Text = "0";
                }

                txtResultBox.Text = txtResultBox.Text.Remove(txtResultBox.Text.Length - 1);
            }
        }
        private void btnCheck_Click(object sender, EventArgs e)
        {
            Button NumBtn = (Button)sender;
            if (txtResultBox.TextLength < 20)
            {
                SetNum(NumBtn.Text);
            }
        }

        public void SetNum(string Num)
        {
            //Num = numbtn.text
            string Screen = txtResultBox.Text;
            decimal NumChcek;

            if (Screen == "0" || LastClick == ClickChcek.Equal_Key || LastClick == ClickChcek.Plus_Key || LastClick == ClickChcek.Minus_Key || LastClick == ClickChcek.Multipli_key || LastClick == ClickChcek.division_key)
            {
                if (LastClick == ClickChcek.Equal_Key)
                {
                    txtHistoryBox.Text = "";
                }
                txtResultBox.Text = Num;
            }
            else
            {
                if (decimal.TryParse(Screen + Num, out NumChcek) == true)
                {
                    if (MinNum < NumChcek && NumChcek < MaxNum)
                    {
                        Screen += Num;
                    }
                    txtResultBox.Text = Screen;
                }
            }
            decimal v = decimal.Parse(txtResultBox.Text);
            txtResultBox.Text = commaProcedure(v, txtResultBox.Text);

            LastClick = ClickChcek.Num_Key;

        }

        private static string commaProcedure(decimal v, string s)
        {
            int pos = 0;
            if (s.Contains("."))
            {

                pos = s.Length - s.IndexOf(",");
                if (pos != 1)   // 
                    return s;
                string formatStr = ("{0:N0");
                s = string.Format(formatStr, v);
            }
            else if (s.Contains(".") && s.Length > 1)
            {
                s = string.Format("{0:N0}", v);
            }
            else
                s = string.Format("{0:N0}", v);
            return s;
        }


        private void btnSign_Click(object sender, EventArgs e)
        {

            if (txtResultBox.Text != "" && txtResultBox.Text.Length != 0)
            {
                double SignNum = double.Parse(txtResultBox.Text);

                SignNum = -SignNum;
                txtResultBox.Text = SignNum.ToString();
            }

        }
        private void Cal_Check(object sender, EventArgs e)
        {
            CalFlag = true;
            CalSave1 = decimal.Parse(txtResultBox.Text);

            Button Calbtn = (Button)sender;
            Cal = Calbtn.ToString();

            txtHistoryBox.Text += txtResultBox.Text + "" + Cal;

        }

        public void Cal_Click(object sender, EventArgs e)
        {
            Button NumBtn = (Button)sender;
            string Cal = NumBtn.Text;

            if (txtResultBox.Text.Length != 0)
            {
                Result = decimal.Parse(txtResultBox.Text);
            }

            if (txtResultBox.Text.Length == 0)
            {
                txtResultBox.Text = "0";
            }

            if (LastClick != ClickChcek.Plus_Key && LastClick != ClickChcek.Minus_Key && LastClick != ClickChcek.Multipli_key && LastClick != ClickChcek.division_key)
            {
                if (opt == Operators.Non || opt == Operators.Equal)
                {
                    SaveData = Result;
                }
                else
                {
                    SaveData2 = Result;
                    Result = CalNum(SaveData, SaveData2, opt);
                    SaveData = Result;
                    //txtHistoryBox.Text = SaveData + Cal;
                }

                 txtHistoryBox.Text =  SaveData + Cal;

            }
            else
            {
                //txtHistoryBox.Text = SaveData + Cal;
            }

            txtResultBox.Text = Result.ToString();



            if (Cal == "+")
            {
                opt = Operators.Plus;
                LastClick = ClickChcek.Plus_Key;
            }
            else if (Cal == "-")
            {
                opt = Operators.Minus;
                LastClick = ClickChcek.Minus_Key;
            }
            else if (Cal == "*")
            {
                opt = Operators.Multiplication;
                LastClick = ClickChcek.Multipli_key;
            }
            else if (Cal == "/")
            {
                opt = Operators.Division;
                LastClick = ClickChcek.division_key;
            }
            else if (Cal == "=")
            {
                opt = Operators.Equal;
                LastClick = ClickChcek.Equal_Key;
            }

        }

        public decimal CalNum(decimal SaveData, decimal SaveData2, Operators Opm)
        {
            decimal result;

            switch (Opm)
            {
                case Operators.Plus:
                    result = SaveData + SaveData2;
                    break;

                case Operators.Minus:
                    result = SaveData - SaveData2;
                    break;

                case Operators.Multiplication:
                    result = SaveData * SaveData2;
                    break;

                case Operators.Division:
                    result = SaveData / SaveData2;
                    break;


                default:
                    result = 0;
                    break;
            }


            return Convert.ToDecimal(result);

        }

        private void btnDot_Click(object sender, EventArgs e)
        {
            if (txtResultBox.Text.Contains("."))
            {
                return;
            }
            else
            {
                txtResultBox.Text += ".";
            }

            LastClick = ClickChcek.Dot_key;

        }

        private void btnEqual_Click(object sender, EventArgs e)
        {
            Button NumBtn = (Button)sender;
            decimal Equal = decimal.Parse(txtResultBox.Text);

            if (opt == Operators.Non || opt == Operators.Equal)
            {
                SaveData = Result;
            }
            else
            {
                SaveData2 = Equal;
                Result = CalNum(SaveData, SaveData2, opt);
                txtHistoryBox.Text = txtHistoryBox.Text + Equal + "=" + Result;
                SaveData = Result;
                //txtHistoryBox.Text = SaveData + Cal;
            }

            txtResultBox.Text = Result.ToString();
            opt = Operators.Equal;
            LastClick = ClickChcek.Equal_Key;
        }

    }
}