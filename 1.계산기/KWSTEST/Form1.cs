using System;
using System.Windows.Forms;

namespace KWSTEST
{
    public enum Operators
    {
        Plus,
        Minus,
        Equal,
        Multiplication,
        Division,

        Non
    }

    public enum ClickChcek
    {
        Num_Key,
        Plus_Key,
        Minus_Key,
        Equal_Key,
        Multipli_key,
        division_key,
        Dot_key,
        Non

    }

    public partial class Form1 : Form
    {
        public double Result = 0.0;
        public bool IsNewNum = true;        
        public ClickChcek LastClick = ClickChcek.Non;
        public Operators opt = Operators.Non;

        public bool CalFlag = true;
        public double CalSave1 = 0.0;
        public double CalSave2 = 0.0;
        public string Cal = string.Empty;

        //History Box저장용
        public double SaveData = 0;
        public double SaveData2 = 0;

        double MaxNum = double.MaxValue;
        double MinNum = double.MinValue;

        public Form1()
        {
            InitializeComponent();

            //첨에 0으로 초기화 하면서 시작
            txtResultBox.Text = "0";
        }


        private void btnClear_Click(object sender, EventArgs e)
        {
            //계산기 초기화 기능
            //결과값/ 결과값UI/ 히스토리 UI 초기화필요
            Result = 0;
            //IsNewNum = true;
            txtResultBox.Clear();
            txtHistoryBox.Clear();

            SaveData = 0;
            SaveData2 = 0;

            LastClick = ClickChcek.Non;
            opt = Operators.Non;

        }

        //↓↓↓↓ 정리 필요(Test소스)↓↓↓↓↓
        //private void btnEqual_Click(object sender, EventArgs e)
        //{
        //    string strCalc = txtScreenBox.Text;  // 텍스트 박스의 문자열을 가져올때
        //    char[] arrCalc = strCalc.ToCharArray();  // 문자열을 문자 배열로 변경

        //    double[] arrNum = new double[100];  // 연산 숫자 배열
        //    char[] arrOp = new char[100];  // 연산자 배열
        //    int numCnt = 0;
        //    int opCnt = 0;
        //    bool contNum = false;

        //    for (int i = 0; i < arrCalc.Length; i++)
        //    {
        //        if ((arrCalc[i] >= '0') && (arrCalc[i] <= '9'))
        //        {
        //            if (contNum)
        //                arrNum[numCnt] = (arrNum[numCnt] * 10) + double.Parse(arrCalc[i].ToString());
        //            else
        //                arrNum[numCnt] = double.Parse(arrCalc[i].ToString());


        //            contNum = true;
        //        }
        //        else
        //        {
        //            numCnt++;
        //            arrOp[opCnt++] = arrCalc[i];

        //            contNum = false;
        //        }
        //    }

        //    double resultCalc = 0;

        //    for (int i = 0; i < opCnt; i++)
        //    {
        //        switch (arrOp[i])
        //        {
        //            case '+':
        //                arrNum[i + 1] = arrNum[i] + arrNum[i + 1];
        //                break;

        //            case '-':
        //                arrNum[i + 1] = arrNum[i] - arrNum[i + 1];
        //                break;

        //            default:
        //                break;
        //        }
        //        resultCalc = arrNum[i + 1];
        //    }

        //    //Console.WriteLine(resultCalc);
        //    txtHisToryBox.Text = resultCalc.ToString();
        //    txtScreenBox.Text = txtHisToryBox.Text;
        //}

        // ↑↑↑↑↑ 정리 필요(Test소스) ↑↑↑↑↑↑↑


        private void btnBackClear_Click(object sender, EventArgs e)
        {
            string Result = txtResultBox.Text;

            if (txtResultBox.Text != "" && txtResultBox.Text != null)
            {
                if (Result.Length == 0)
                {
                    txtResultBox.Text = "0";
                }

                txtResultBox.Text = txtResultBox.Text.Remove(txtResultBox.Text.Length - 1);
            }

            //↓↓↓↓ 정리 필요(Test소스)↓↓↓↓↓
            //txtScreenBox.Text = txtScreenBox.Text.Substring(0, txtScreenBox.Text.Length - 1); 
        }
        private void btnCheck_Click(object sender, EventArgs e)
        {
            Button NumBtn = (Button)sender;      

            SetNum(NumBtn.Text);
        }

        public void SetNum(string Num)
        {
            //Num = numbtn.text
            string Screen = txtResultBox.Text;
            double NumChcek;

            if (Screen == "0" || LastClick == ClickChcek.Equal_Key || LastClick == ClickChcek.Plus_Key || LastClick == ClickChcek.Minus_Key || LastClick == ClickChcek.Multipli_key || LastClick == ClickChcek.division_key )
            {
                if (LastClick == ClickChcek.Equal_Key)
                {
                    txtHistoryBox.Text = "";
                }
                txtResultBox.Text = Num;
            }
            else
            {
                if (double.TryParse(Screen + Num, out NumChcek) == true)
                {
                    if (MinNum < NumChcek && NumChcek < MaxNum)
                    {
                        Screen += Num;
                    }
                    txtResultBox.Text = Screen;
                }
            }

            double v = Double.Parse(txtResultBox.Text);
            txtResultBox.Text = commaProcedure(v, txtResultBox.Text);


            LastClick = ClickChcek.Num_Key;  

        }

        private static string commaProcedure(double v, string s)
        {
            int pos = 0;
            if (s.Contains("."))
            {
                pos = s.Length - s.IndexOf(",");	// 소수점 아래 자리수 + 1
              if (pos == 1)   // 맨 뒤에 소수점이 있으면 그대로 리턴
                    return s;
                string formatStr = "{0:N" + (pos - 1) + "}";
                s = string.Format(formatStr, v);
            }
            else
                s = string.Format("{0:N0}", v);
            return s;
        }


        private void btnSign_Click(object sender, EventArgs e)
        {
           
            if (txtResultBox.Text != "" && txtResultBox.Text.Length != 0)
            {
                double SignNum = double.Parse(txtResultBox.Text);

                SignNum = -SignNum;
                txtResultBox.Text = SignNum.ToString();
            }

            //if (txtResultBox.Text != "" && txtResultBox.Text.Length != 0)
            //{
            //    txtResultBox.Text = (-1 * double.Parse(txtResultBox.Text)).ToString();
            //}
        }
        private void Cal_Check(object sender, EventArgs e)
        {
            CalFlag = true;
            CalSave1 = double.Parse(txtResultBox.Text);

            Button Calbtn = (Button)sender;
            Cal = Calbtn.ToString();

            txtHistoryBox.Text += txtResultBox.Text + "" + Cal;

        }

        public void Cal_Click(object sender, EventArgs e)
        {
            Button NumBtn = (Button)sender;           
            string Cal = NumBtn.Text;

            if (txtResultBox.Text.Length != 0)
            {
                Result = double.Parse(txtResultBox.Text);
            }

            if (txtResultBox.Text.Length == 0)
            {
                txtResultBox.Text = "0";
            }

            //txtHistoryBox.Text = txtScreenBox.Text;
            //txtScreenBox.Text = Result.ToString();
            //if (LastClick == ClickChcek.Equal_Key)
            //{
            //    if (opt == Operators.Equal)
            //    {
            //        txtHistoryBox.Text = Result + Cal;
            //    }
            //}

            if (LastClick != ClickChcek.Plus_Key && LastClick != ClickChcek.Minus_Key && LastClick != ClickChcek.Multipli_key && LastClick != ClickChcek.division_key)
            {
                if (opt == Operators.Non || opt == Operators.Equal)
                {
                    SaveData = Result;
                }
                else
                {
                    SaveData2 = Result;
                    Result = CalNum(SaveData, SaveData2, opt);
                    SaveData = Result;
                    //txtHistoryBox.Text = SaveData + Cal;
                }
               
                txtHistoryBox.Text = SaveData + Cal;
            }
            else
            {
               
                //txtHistoryBox.Text = SaveData + Cal;
            }

            //↓↓↓↓ 정리 필요(Test소스)↓↓↓↓↓
            //if (txtScreenBox.Text.Length == 0)
            //{
            //    Result = int.Parse(SaveData2.ToString());
            //}

            txtResultBox.Text = Result.ToString();
            //else if()
            //{
            //    txtHistoryBox.Text = txtScreenBox + Cal;
            //}

            if (Cal == "+")
            {
                opt = Operators.Plus;
                LastClick = ClickChcek.Plus_Key;
            }
            else if (Cal == "-")
            {
                opt = Operators.Minus;
                LastClick = ClickChcek.Minus_Key;
            }
            else if (Cal == "*")
            {
                opt = Operators.Multiplication;
                LastClick = ClickChcek.Multipli_key;
            }
            else if (Cal == "/")
            {
                opt = Operators.Division;
                LastClick = ClickChcek.division_key;
            }
            else if (Cal == "=")
            {
                opt = Operators.Equal;
                LastClick = ClickChcek.Equal_Key;
            }

            //if (LastClick == ClickChcek.Equal_Key)
            //{
            //    txtHistoryBox.Text = 
            //}

            //↓↓↓↓ 정리 필요(Test소스)↓↓↓↓↓
            //----------------
            //if (IsNewNum == false)
            //{
            //    int num = int.Parse(txtScreenBox.Text);
            //    if (opt == Operators.Plus)
            //    {
            //        Result += num;

            //    }
            //    else if (opt == Operators.Minus)
            //    {
            //        Result -= num;
            //    }

            //    txtScreenBox.Text = Result.ToString();
            //    IsNewNum = true; // 신규 숫자 입력 받는 플래그

            //}

            //Button optButton = (Button)sender;
            //if (optButton.Text == "+")
            //{
            //    opt = Operators.Plus;
            //}
            //else if (optButton.Text == "-")
            //{
            //    opt = Operators.Minus;
            //}

            //txtHistoryBox.Text = txtScreenBox.Text + optButton.Text;

        }

        public double CalNum(double SaveData, double SaveData2, Operators Opm)
        {
            double result;

            switch (Opm)
            {
                case Operators.Plus:
                    result = SaveData + SaveData2;
                    break;

                case Operators.Minus:
                    result = SaveData - SaveData2;
                    break;

                case Operators.Multiplication:
                    result = SaveData * SaveData2;
                    break;

                case Operators.Division:
                    result = SaveData / SaveData2;
                    break;


                default:
                    result = 0.0;
                    break;
            }


            return Convert.ToDouble(result);
            
        }

        private void btnDot_Click(object sender, EventArgs e)
        {
            if (txtResultBox.Text.Contains("."))
            {
                return;
            }
            else
            {
                txtResultBox.Text += ".";
            }

            LastClick = ClickChcek.Dot_key;
            
        }

        private void btnEqual_Click(object sender, EventArgs e)
        {
            Button NumBtn = (Button)sender;
            double Equal = double.Parse(txtResultBox.Text);

            if (opt == Operators.Non || opt == Operators.Equal)
            {
                SaveData = Result;
            }
            else
            {
                SaveData2 = Equal;
                Result = CalNum(SaveData, SaveData2, opt);
                txtHistoryBox.Text = txtHistoryBox.Text + Equal + "=" + Result;
                SaveData = Result;
                //txtHistoryBox.Text = SaveData + Cal;
            }

            txtResultBox.Text = Result.ToString();
        }









        /////
        /////↓↓↓↓ 정리 필요(Test소스)↓↓↓↓↓
        //private void btnPlus_Click(object sender, EventArgs e)
        //{
        //    int num = int.Parse(txtScreenBox.Text);
        //    Result = Result + num;

        //    txtScreenBox.Text = Result.ToString();
        //    IsNewNum = true; // 신규 숫자 입력 받는 플래그

        //    txtHisToryBox.Text = txtScreenBox.Text;


        //}
        //private void btnMinus_Click(object sender, EventArgs e)
        //{
        //    int num = int.Parse(txtScreenBox.Text);
        //    if (opt == Operators.Plus)
        //    {
        //        Result = Result + num;

        //    }
        //    else if (opt == Operators.Minus)
        //    {
        //        Result = Result - num;
        //    }

        //    txtScreenBox.Text = Result.ToString();
        //    IsNewNum = true; // 신규 숫자 입력 받는 플래그

        //    Button optButton = (Button)sender;
        //    if (optButton.Text == "+")
        //    {
        //        opt = Operators.Plus;
        //    }
        //    else if (optButton.Text == "-")
        //    {
        //        opt = Operators.Minus;
        //    }

        //    txtHisToryBox.Text = txtScreenBox.Text;
        //}

    }
}